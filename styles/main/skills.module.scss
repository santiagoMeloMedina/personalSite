
$coords: -30%, -15%, 0%, 100%, 115%, 130%;  
$savedCoordinates: ();

@function makePositions() {
    $result: ();
    @for $i from 1 through length($coords) {
        @for $j from 1 through length($coords) {
            $result: append($result, (nth($coords, $i), nth($coords, $j)), 'space');
        }
    }
    @return $result;
}

$positions: makePositions();

@function getCoordinate() {
    @if length($positions) > 0 {
        $newList: ();
        $index: random(length($positions));
        @for $i from 1 through length($positions) {
            @if $i != $index {
                $newList: append($newList, nth($positions, $i), 'space');
            }
        }
        $result: nth($positions, $index);
        $positions: $newList !global;
        $savedCoordinates: append($savedCoordinates, $result, 'space') !global;
        @return $result;
    }
    @return (0%, 0%);
    
}

.ball {
    position: absolute;
    transform: translate(-50%, -50%);
    width: 50%;
    height: 50%;
    left: 50%;
    top: 50%;
    border-radius: 50%;
}

.logo {
    position: absolute;
    transform: translate(-50%, -50%);
    width: 30px;
    left: 30px;
    top: 50%;
    visibility: hidden;
    transition: opacity 1s;
    opacity: 20%;
    animation: disperse 1s 1 forwards;
    animation-delay: 1.5s;
}

.logo {
    position: absolute;
    transform: translate(-50%, -50%);
    width: 30px;
    left: 30px;
    top: 50%;
    visibility: hidden;
    transition: opacity 1s;
    opacity: 20%;
    animation: disperse 1s 1 forwards;
    animation-delay: 1.5s;
}

.logoout {
    position: absolute;
    transform: translate(-50%, -50%);
    width: 30px;
    left: 30px;
    top: 50%;
    transition: opacity 1s;
    opacity: 20%;
    animation: congregate 0.8s 1 forwards;
}

@for $i from 0 to length($coords) * length($coords) {
    .logo:nth-child(#{$i + 1}) {
        $coordinate: getCoordinate();
        left: nth($coordinate, 1);
        top: nth($coordinate, 2);
    }

    .logo:nth-child(#{$i + 1}):hover {
        opacity: 100%;
    }
    
}

@for $i from 0 to length($coords) * length($coords) {
    .logoout:nth-child(#{$i + 1}) {
        $coordinate: nth($savedCoordinates, $i + 1);
        left: nth($coordinate, 1);
        top: nth($coordinate, 2);
    }

    .logoout:nth-child(#{$i + 1}):hover {
        opacity: 100%;
    }
    
}

@keyframes disperse {
    0% {
        left: 50%;
        top: 50%;
    }
    100% {
        visibility: visible;
    }
}

@keyframes congregate {
    100% {
        left: 50%;
        top: 30%;
        visibility: hidden;
    }
}

.noselect {
    -webkit-touch-callout: none; /* iOS Safari */
      -webkit-user-select: none; /* Safari */
       -khtml-user-select: none; /* Konqueror HTML */
         -moz-user-select: none; /* Old versions of Firefox */
          -ms-user-select: none; /* Internet Explorer/Edge */
              user-select: none; /* Non-prefixed version, currently
                                    supported by Chrome, Edge, Opera and Firefox */
}